import numpy as np
import pandas as pd


# for the moment, i'll make some function. We will see if classes seem a better idea once it gets more complex
def counts_to_csv(list_count_arr, graph, path_to_csv, sep=';'):
    """
    Take a list of numpy array generated by the count methods of the agent class, and save them as a CSV (easier for
    R users).
    todo : decide if we should take the graph or the agent as second argument. Unclear.
    :param list_count_arr: list of count arrays
    :param graph: graph object from which the count arrays have been extracted
    :param path_to_csv: full path to the final csv file
    :param sep: optional. Separator in final CSV. Default value ';'
    """
    row_stack = np.row_stack(list_count_arr)
    time_stamp = np.array(range(1, row_stack.shape[0] + 1), dtype=np.int32)
    final_matrix = np.column_stack([time_stamp, row_stack])
    dict_ind_to_id = {ind: ids for ids, ind in graph.dict_cell_id_to_ind.items()}
    columns = ['time_step'] + [str(dict_ind_to_id[i]) for i in range(graph.connections.shape[0])]
    df = pd.DataFrame(final_matrix, columns=columns)
    df.to_csv(path_to_csv, index=False, sep=sep)


